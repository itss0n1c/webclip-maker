{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/EntryCell.svelte","../../src/IconHandler.svelte","../../node_modules/uuid/dist/esm-browser/rng.js","../../node_modules/uuid/dist/esm-browser/regex.js","../../node_modules/uuid/dist/esm-browser/validate.js","../../node_modules/uuid/dist/esm-browser/stringify.js","../../node_modules/uuid/dist/esm-browser/v4.js","../../src/mcgen.ts","../../node_modules/svelte/store/index.mjs","../../src/stores.ts","../../src/addApp.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.30.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\r\nimport { createEventDispatcher } from \"svelte\";\r\n\r\n\r\n\texport var title = \"\"\r\n\texport let cellid: number\r\n\tconst dispatch = createEventDispatcher()\r\n\r\n\tfunction requestRemoval() {\r\n\t\tdispatch(\"message\", {\r\n\t\t\tremove: true,\r\n\t\t\tid: cellid\r\n\t\t})\r\n\t}\r\n\r\n</script>\r\n\r\n<main>\r\n\t<div class=\"header\">\r\n\t\t<p class=\"title\">{title}</p>\r\n\t\t<div class=\"controls\">\r\n\t\t\t<!-- <div>Save</div> -->\r\n\t\t\t<div class=\"red\" on:click={requestRemoval}>Remove</div>\r\n\t\t</div>\r\n\t</div>\r\n\t<slot class=\"body\"></slot>\r\n\t\r\n</main>\r\n\r\n\r\n<style>\r\n\r\n\t.header {\r\n\t\tdisplay:flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.header .title {\r\n\t\tfont-size: 1.2rem;\r\n\t}\r\n\r\n\t.header .controls > div {\r\n\t\tdisplay: inline;\r\n\t\tbackground: #2a2a2a;\r\n\t\tpadding-left: 1rem;\r\n\t\tpadding-right: 1rem;\r\n\t\tpadding-top: 0.5rem;\r\n\t\tpadding-bottom: 0.5rem;\r\n\t\tborder-radius: 0.5rem;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.header .controls > div:active {\r\n\t\topacity: 0.5;\r\n\t}\r\n\r\n\t.header .controls > div.red {\r\n\t\tbackground-color: rgb(225, 57, 57);\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\r\n\r\n</style>\r\n","<script lang=\"ts\">\r\nimport { createEventDispatcher } from \"svelte\";\r\n\r\n\r\n\tlet iconel: HTMLInputElement\r\n\texport let icon: string = \"\"\r\n\texport let index: number\r\n\r\n\tfunction editIcon() {\r\n\t\ticonel.click()\r\n\t}\r\n\r\n\tconst dispatch = createEventDispatcher()\r\n\r\n\tfunction handleIcon() {\r\n\t\tlet val = iconel.files[0]\r\n\t\tlet reader = new FileReader()\r\n\t\treader.onload = (e) => {\r\n\t\t\ticon = e.target.result as string;\r\n\r\n\t\t\tdispatch(\"message\", { icon, index })\r\n\t\t}\r\n\t\treader.readAsDataURL(val)\r\n\t\tconsole.log(icon)\r\n\t\t\r\n\t}\r\n\r\n</script>\r\n<main>\r\n\t<div class=\"icon\" on:click={editIcon}>\r\n\t\t<input bind:this={iconel} on:change={handleIcon} type=\"file\" accept=\"image/*\" name=\"icon[{index}]\" style=\"display: none\" required/>\r\n\t\t{#if icon != \"\"}\r\n\t\t\t<img src={icon} alt=\"Click to add Icon\" />\r\n\t\t{:else}\r\n\t\t\t<p>Click to add Icon</p>\r\n\t\t{/if}\r\n\t</div>\r\n</main>\r\n\r\n<style>\r\n\t.icon {\r\n\t\tpadding: 0.5rem 1.5rem;\r\n\t\tbackground: #333;\r\n\t\tdisplay:flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items: center;\r\n\t\twidth: 100%;\r\n\t\tmargin-bottom: 1rem;\r\n\t\tborder-radius: 0.5rem;\r\n\t}\r\n\r\n\t.icon img {\r\n\t\tmax-width: 6rem;\r\n\t\tmax-height: 6rem;\r\n\t\tborder-radius: 1rem;\r\n\t}\r\n</style>\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n// find the complete implementation of crypto (msCrypto) on IE11.\nvar getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  if (!getRandomValues) {\n    throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 } from 'uuid';\r\nconst { parse, build } = globalThis.plist;\r\nexport class Config {\r\n    constructor(id) {\r\n        this.config_name = '';\r\n        this.config_author = '';\r\n        this.webclips = [];\r\n        this.id = id || this.genString();\r\n    }\r\n    async loadIcon(index) {\r\n        if (typeof this.webclips[index] === 'undefined') {\r\n            throw 404;\r\n        }\r\n        const webclip = this.webclips[index];\r\n        const icondata = await fetch(webclip.iconurl).then(r => r.arrayBuffer());\r\n        this.webclips[index].icon = new Uint8Array(icondata);\r\n        return this.webclips[index].icon;\r\n    }\r\n    load(mobileconfig) {\r\n        const data = parse(mobileconfig);\r\n        this.config_name = data.PayloadDisplayName;\r\n        this.config_author = data.PayloadOrganization;\r\n        for (const payload of data.PayloadContent) {\r\n            console.log(payload.Icon);\r\n            const imageblob = new Blob([payload.Icon], { type: 'image/png' });\r\n            const url = URL.createObjectURL(imageblob);\r\n            console.log(payload);\r\n            this.webclips = [...this.webclips, {\r\n                    name: payload.Label,\r\n                    icon: payload.Icon,\r\n                    iconurl: url,\r\n                    url: payload.URL\r\n                }];\r\n        }\r\n        return this;\r\n    }\r\n    compile() {\r\n        const app_uuid = v4().toUpperCase();\r\n        const PayloadContent = [];\r\n        if (typeof this.webclips !== 'undefined' && this.webclips.length > 0) {\r\n            for (const p of this.webclips) {\r\n                if (p.icon === null) {\r\n                    continue;\r\n                }\r\n                const payload_uuid = v4().toUpperCase();\r\n                PayloadContent.push({\r\n                    FullScreen: true,\r\n                    Icon: p.icon,\r\n                    IsRemovable: true,\r\n                    Label: p.name,\r\n                    PayloadDescription: 'Web app bundled into a config, generated by @S0n1c_Dev',\r\n                    PayloadIdentifier: `com.apple.webClip.managed.${payload_uuid}`,\r\n                    PayloadType: 'com.apple.webClip.managed',\r\n                    PayloadUUID: payload_uuid,\r\n                    PayloadVersion: 1,\r\n                    Precomposed: true,\r\n                    URL: p.url\r\n                });\r\n            }\r\n        }\r\n        const payload = {\r\n            PayloadContent,\r\n            PayloadDescription: 'This config was generated via WebClip Maker by @S0n1c_Dev.',\r\n            PayloadDisplayName: this.config_name,\r\n            PayloadIdentifier: `ca.s0n1c.ios.webclip.${app_uuid}`,\r\n            PayloadOrganization: this.config_author,\r\n            PayloadRemovalDisallowed: false,\r\n            PayloadType: 'Configuration',\r\n            PayloadUUID: app_uuid,\r\n            PayloadVersion: 1\r\n        };\r\n        let res;\r\n        try {\r\n            res = build(payload);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n            throw e;\r\n        }\r\n        console.log(res);\r\n        return res;\r\n    }\r\n    genString(length = 10) {\r\n        var result = '';\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        var charactersLength = characters.length;\r\n        for (var i = 0; i < length; i++) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n    async save() {\r\n        console.log(this);\r\n        const gen = this.compile();\r\n        localStorage.setItem(`mconfig-${this.id}`, gen);\r\n    }\r\n}\r\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-undef */\r\nimport { Config } from './mcgen';\r\nimport { writable } from 'svelte/store';\r\nfunction loadConfigs() {\r\n    const configs = [];\r\n    const keys = Object.keys(localStorage).filter(key => key.startsWith('mconfig-'));\r\n    if (keys.length > 0) {\r\n        for (const key of keys) {\r\n            const mconfigs = localStorage.getItem(key);\r\n            const id = key.split('mconfig-')[1];\r\n            const config = new Config(id);\r\n            config.load(mconfigs);\r\n            configs.push(config);\r\n        }\r\n    }\r\n    //\tconsole.log(configs, localStorage);\r\n    return configs;\r\n}\r\nexport function removeConfigLS(id) {\r\n    if (typeof localStorage[`mconfig-${id}`] === 'undefined') {\r\n        throw 404;\r\n    }\r\n    localStorage.removeItem(`mconfig-${id}`);\r\n}\r\nexport const Configs = writable(loadConfigs());\r\n/*\r\n * export class Configs extends BaseStore<string, Config> {\r\n * \tls: Storage\r\n * \tevts: {evt: string, cb: (configs: any) => void}[] = []\r\n * \tconstructor() {\r\n * \t\tsuper();\r\n * \t\tthis.load();\r\n * \t}\r\n */\r\n/*\r\n * \ton(evt: 'added', cb: (configs: this) => void): void {\r\n * \t\tthis.evts.push({ evt,\r\n * \t\t\tcb });\r\n * \t\tconsole.log(this.evts);\r\n * \t}\r\n */\r\n/*\r\n * \tload(): void {\r\n * \t\tthis.ls = localStorage;\r\n */\r\n/*\r\n * \t\tconst keys = Object.keys(this.ls).filter(key => key.startsWith('mconfig-'));\r\n * \t\tif (keys.length > 0) {\r\n * \t\t\tfor (const key of keys) {\r\n * \t\t\t\tconst mconfig = this.ls[key];\r\n * \t\t\t\tconst id = key.split('mconfig-')[1];\r\n * \t\t\t\tconst config = new Config(id);\r\n * \t\t\t\tconfig.load(mconfig);\r\n * \t\t\t\tthis.set(config.id, config);\r\n * \t\t\t}\r\n * \t\t}\r\n * \t}\r\n */\r\n/*\r\n * \tset(k: string, v: Config): this {\r\n * \t\tthis.ls.setItem(`mconfig-${v.id}`, v.compile());\r\n * \t\tthis.evts.filter(evt => evt.evt === 'added').forEach(evt => evt.cb.bind(this, this));\r\n * \t\treturn super.set(k, v);\r\n * \t}\r\n */\r\n/*\r\n * \tadd(): Config {\r\n * \t\tconst config = new Config();\r\n * \t\tthis.set(config.id, config);\r\n * \t\treturn this.get(config.id);\r\n * \t}\r\n * }\r\n */\r\n","<script lang=\"ts\">\r\n\r\nimport EntryCell from \"./EntryCell.svelte\";\r\nimport IconHandler from \"./IconHandler.svelte\";\r\nimport { Configs } from \"./stores\";\r\n\r\n\t\r\n\tlet genbutton: HTMLInputElement\r\n\r\n\texport let id: string\r\n\t\r\n\tlet config = $Configs.find(config => config.id == id)\r\n\t\r\n\tglobalThis.config = config;\r\n\t$: payloads = config.webclips;\r\n\r\n\r\n\t\r\n\tfunction parsedDataURL(url: string): {mime: string, data: string} {\r\n\t\tlet start = url.indexOf(\"data:\") + 5\r\n\t\tlet end = url.indexOf(\";base64,\")\r\n\t\tlet mime = url.substring(start, end)\r\n\t\tlet data = url.substr(end + 8, url.length)\r\n\t\treturn {\r\n\t\t\tmime,\r\n\t\t\tdata\r\n\t\t}\r\n\t}\r\n\r\n\tinterface IconEvent extends Event {\r\n\t\tdetail: {\r\n\t\t\ticon: string,\r\n\t\t\tindex: number\r\n\t\t}\t\r\n\t}\r\n\r\n\tfunction handleIcon(e: IconEvent) {\r\n\t\tif(typeof e.detail.icon !== \"string\" || typeof e.detail.index !== \"number\") return false;\r\n\t\tconfig.loadIcon(e.detail.index)\r\n\t}\r\n\r\n\tfunction addPayload() {\r\n\t\tconfig.webclips = [...config.webclips, {\r\n\t\t\tname: \"\",\r\n\t\t\ticon: null,\r\n\t\t\ticonurl: \"\",\r\n\t\t\turl: \"\"\r\n\t\t}]\r\n\t}\r\n\r\n\tfunction removePayload(index: number) { \r\n\t\tlet webclips = [...config.webclips]\r\n\t\twebclips.splice(index, 1)\r\n\t\tconfig.webclips = [...webclips];\r\n\t}\r\n\r\n\tinterface DispatchEvent extends Event {\r\n\t\tdetail: {\r\n\t\t\t[k: string]: any\r\n\t\t}\r\n\t}\r\n\r\n\tfunction handleCell(event: DispatchEvent) {\r\n\t\tconsole.log(event)\r\n\t\tif(typeof event.detail.remove !== \"boolean\") return;\r\n\t\tif(event.detail.remove) {\r\n\t\t\tconsole.log(`removing payload ${event.detail.id}`, event.detail, config.webclips[event.detail.id])\r\n\t\t\tremovePayload(event.detail.id)\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<main>\r\n\t<form enctype=\"multipart/form-data\">\r\n\t\t<div class=\"formgroup\">\r\n\t\t\t<input type=\"text\" name=\"config_name\" placeholder=\"Profile Name\" bind:value={config.config_name} required/>\r\n\t\t\t<input type=\"text\" name=\"config_author\" placeholder=\"Profile Author\" bind:value={config.config_author} required/>\r\n\t\t</div>\r\n\t\t\t{#each payloads as payload, index}\r\n\t\t\t\t<div class=\"formgroup\">\r\n\t\t\t\t\t\t<EntryCell title=\"Web App Settings\" on:message={handleCell} cellid={index}>\r\n\t\t\t\t\t\t\t<input type=\"text\" name=\"name[{index}]\" placeholder=\"Name\" bind:value={config.webclips[index].name} required/>\r\n\t\t\t\t\t\t\t<IconHandler index={index} on:message={handleIcon} bind:icon={config.webclips[index].iconurl} />\r\n\t\t\t\t\t\t\t<input type=\"url\" name=\"url[{index}]\" placeholder=\"URL\" bind:value={config.webclips[index].url} required/>\r\n\t\t\t\t\t\t</EntryCell>\r\n\t\t\t\t</div>\r\n\t\t\t{/each}\r\n\t\t\t<div class=\"button\" on:click={addPayload}><i class=\"fas fa-plus\"></i></div>\r\n\t\t\t<br /><br />\r\n\r\n\t\t\r\n\t</form>\r\n</main>\r\n\r\n\r\n<style>\r\n\tmain {\r\n\t\tmargin-top: 1.5rem;\r\n\t}\t\r\n\r\n\t.button {\r\n\t\tdisplay: inline;\r\n\t\tbackground: rgb(72, 72, 223);\r\n\t\tpadding-left: 1rem;\r\n\t\tpadding-right: 1rem;\r\n\t\tpadding-top: 0.5rem;\r\n\t\tpadding-bottom: 0.5rem;\r\n\t\tborder-radius: 0.5rem;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #fff;\r\n\t\tcursor: pointer;\r\n\t}\r\n\t\r\n</style>\r\n","<script lang=\"ts\">\r\nimport AddApp from \"./addApp.svelte\";\r\nimport { onMount } from \"svelte\";\r\nimport { Configs, removeConfigLS } from \"./stores\";\r\nimport { Config } from \"./mcgen\";\r\n\r\nonMount(() => {\r\n\tconsole.log($Configs)\r\n})\r\n\r\nlet currentConfig: Config\r\n\r\nlet configs = $Configs;\r\n\r\nlet showModal = false\r\nlet save_button: HTMLDivElement\r\n\r\nfunction createProfile() {\r\n\tconst config = new Config();\r\n\t$Configs.push(config)\r\n\tconfig.save()\r\n\tconfigs = [...$Configs];\r\n\tcurrentConfig = config;\r\n\tshowModal = true;\r\n}\r\n\r\nfunction closeProfile() {\r\n\tcurrentConfig = undefined;\r\n\tshowModal = false;\r\n}\r\n\r\nfunction getConfig(id): Config {\r\n\tlet found: Config[] = []\r\n\tfor(let config of $Configs) {\r\n\t\tif(config.id == id) {\r\n\t\t\tfound.push(config)\r\n\t\t}\r\n\t}\r\n\treturn found[0]\r\n}\r\n\r\nfunction openConfig(e: MouseEvent) {\r\n\tlet el = e.target as HTMLDivElement;\r\n\t//console.log(el, el.parentElement)\r\n\tif(el.id.length == 0 && el.parentElement.id.length > 0) {\r\n\t\tel = el.parentElement as HTMLDivElement;\r\n\t}\r\n\t//console.log(el)\r\n\tlet id = [...el.attributes].find(el => el.name == \"id\").value\r\n\tlet config = getConfig(id)\r\n\tconsole.log(config)\r\n\tcurrentConfig = config;\r\n\t//console.log(currentConfig)\r\n\tshowModal = true;\r\n}\r\n\r\nfunction saveCurrent() {\r\n\tif(typeof currentConfig === \"undefined\") return;\r\n\tsave_button.innerHTML = \"Saving...\";\r\n\tlet id = currentConfig.id;\r\n\tfor(let config of $Configs) {\r\n\t\tif(config.id == id) {\r\n\t\t\tconfig.save();\r\n\t\t}\r\n\t}\r\n\tsave_button.innerHTML = \"Saved!\";\r\n\tconfigs = [...$Configs]\r\n\tsetTimeout(() => save_button.innerHTML = '<i class=\"far fa-save\"></i>', 1000)\r\n}\r\n\r\nfunction ClickForConfig(e: MouseEvent): Config {\r\n\tlet el = e.target as HTMLDivElement;\r\n\tif(el.id.length == 0 && el.parentElement.id.length > 0) {\r\n\t\tel = el.parentElement as HTMLDivElement;\r\n\t}\r\n\r\n\tlet id = [...el.attributes].find(el => el.name == \"id\").value\r\n\tlet config = getConfig(id)\r\n\treturn config;\r\n}\r\n\r\nfunction downloadConfig(e: MouseEvent) {\r\n\tlet config = ClickForConfig(e)\r\n\tlet compiled = config.compile()\r\n\tlet blob = new Blob([compiled], {type: \"application/xml\"})\r\n\tlet url = URL.createObjectURL(blob)\r\n\twindow.open(url, \"_blank\")\r\n}\r\n\r\nfunction installConfig(e: MouseEvent) {\r\n\tlet config = ClickForConfig(e)\r\n\tconsole.log(config)\r\n\tlet compiled = config.compile()\r\n\tlet blob = new Blob([compiled], {type: \"application/x-apple-aspen-config\"})\r\n\tlet url = URL.createObjectURL(blob)\r\n\twindow.open(url, \"_blank\")\r\n}\r\n\r\nfunction deleteConfig(e: MouseEvent) {\r\n\tlet config = ClickForConfig(e)\r\n\tif(confirm(`Are you sure you would like to remove the Config \"${config.config_name}\"? This action cannot be undone`)) {\r\n\t\tconsole.log(config)\r\n\t\t$Configs.splice($Configs.findIndex(c => c.id == config.id), 1)\r\n\t\tremoveConfigLS(config.id)\r\n\t\tconfigs = [...$Configs]\r\n\t}\r\n}\r\n\r\n</script>\r\n\r\n<main>\r\n\t<section class=\"header\">\r\n\t\t<h1>Webclip Maker</h1>\r\n\t</section>\r\n\t<section>\r\n\t\t<div class=\"button\" on:click={createProfile}>Create</div>\r\n\t\t<h3>Saved Configurations</h3>\r\n\t\t{#each configs as config}\r\n\t\t\t<div class=\"cell\">\r\n\t\t\t\t<div class=\"info\">\r\n\t\t\t\t\t<p>{config.config_name || \"Untitled Config\"}</p>\r\n\t\t\t\t\t<p>Web App count: {config.webclips.length}</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"buttons\">\r\n\t\t\t\t\t<div class=\"blue\" id={config.id} on:click={installConfig}><i class=\"fas fa-mobile\"></i></div>\r\n\t\t\t\t\t<div class=\"blue\" id={config.id} on:click={downloadConfig}><i class=\"fas fa-long-arrow-alt-down\"></i></div>\r\n\t\t\t\t\t<div class=\"blue\" id={config.id} on:click={openConfig}><i class=\"far fa-edit\"></i></div>\r\n\t\t\t\t\t<div class=\"red\" id={config.id} on:click={deleteConfig}><i class=\"fas fa-trash\"></i></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t{:else}\r\n\t\t\t<p>You don't seem to have any saved web app profiles... Make one above!</p>\r\n\t\t{/each}\r\n\t</section>\r\n\t{#if showModal}\r\n\t\t<div class=\"modal-overlay\" on:click={closeProfile}></div>\r\n\t\t<div class=\"modal show\">\r\n\t\t\t<div class=\"header\">\r\n\t\t\t\t<div class=\"title\">Config Settings</div>\r\n\t\t\t\t<div class=\"buttons\">\r\n\t\t\t\t\t<div class=\"blue\" on:click={saveCurrent} bind:this={save_button}><i class=\"far fa-save\"></i></div>\r\n\t\t\t\t\t<div class=\"red\" on:click={closeProfile}><i class=\"fas fa-times\"></i></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<AddApp id={currentConfig.id}/>\r\n\t\t</div>\r\n\t{/if}\r\n\t\r\n</main>\r\n\r\n<style>\r\n\tsection {\r\n\t\tmargin-bottom: 2rem;\r\n\t}\r\n\r\n\t.button {\r\n\t\tbackground: rgb(72, 72, 223);\r\n\t\tcolor: white;\r\n\t\tborder:0;\r\n\t\tpadding: 0.5rem 1.5rem;\r\n\t\twidth: 10rem;\r\n\t\tdisplay:flex;\r\n\t\tjustify-content: center;\r\n\t\tborder-radius: 0.5rem;\r\n\t\ttext-decoration: none;\r\n\t}\r\n\r\n\t.cell {\r\n\t\tpadding: 0.5rem 1rem;\r\n\t\tbackground: #2a2a2a;\r\n\t\tborder-radius: 0.5rem;\r\n\t\tcursor: pointer;\r\n\t\twidth: 30rem;\r\n\t\tmargin-bottom: 1rem;\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t}\r\n\r\n\t.cell .buttons {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.cell .buttons div:not(:last-child) {\r\n\t\tmargin-right: 0.5rem;\r\n\t}\r\n\r\n\t.cell .buttons div {\r\n\t\tbackground: #2a2a2a;\r\n\t\tborder-radius: 100%;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t\tcursor: pointer;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\twidth: 2.3rem;\r\n\t\theight: 2.3rem;\r\n\t}\r\n\r\n\t\r\n\r\n\t\r\n\t.cell .buttons > div:active {\r\n\t\topacity: 0.5;\r\n\t}\r\n\r\n\t.cell .buttons > div.red {\r\n\t\tbackground-color: rgb(225, 57, 57);\r\n\t\tcolor: white;\r\n\t}\r\n\t\r\n\t.cell .buttons > div.blue {\r\n\t\tbackground-color: rgb(72, 72, 223);\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\r\n\t.modal {\r\n\t\ttop: 5%;\r\n\t\tleft: 30%;\r\n\t\tright:30%;\r\n\t\tbottom: 5%;\r\n\t\tposition: absolute;\r\n\t\tpadding: 2rem;\r\n\t\tbackground: #1f1f1f;\r\n\t\tborder-radius: 0.5rem;\r\n\t\toverflow: auto;\r\n\t\tz-index: 2;\r\n\t\tvisibility: hidden;\r\n\t\topacity: 0;\r\n\t\ttransition: visibility 0s, opacity 0.5s ease-in-out;\r\n\t\t-webkit-transition: visibility 0s, opacity 0.5s ease-in-out;\r\n\t}\r\n\r\n\t.modal.show {\r\n\t\tvisibility: visible;\r\n\t\topacity:1;\r\n\t}\r\n\r\n\t.modal .header {\r\n\t\tdisplay:flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t}\r\n\r\n\t.modal .header .title {\r\n\t\tfont-size: 1.2rem;\r\n\t}\r\n\r\n\t.modal .header .buttons > div {\r\n\t\tdisplay: inline;\r\n\t\tbackground: #2a2a2a;\r\n\t\tpadding-left: 1rem;\r\n\t\tpadding-right: 1rem;\r\n\t\tpadding-top: 0.5rem;\r\n\t\tpadding-bottom: 0.5rem;\r\n\t\tborder-radius: 0.5rem;\r\n\t\tcursor: pointer;\r\n\t\tcolor: #666;\r\n\t\tcursor: pointer;\r\n\t}\r\n\r\n\t.modal .buttons > div:active {\r\n\t\topacity: 0.5;\r\n\t}\r\n\r\n\t.modal .buttons > div.red {\r\n\t\tbackground-color: rgb(225, 57, 57);\r\n\t\tcolor: white;\r\n\t}\r\n\t\r\n\t.modal .buttons > div.blue {\r\n\t\tbackground-color: rgb(72, 72, 223);\r\n\t\tcolor: white;\r\n\t}\r\n\r\n\t.modal-overlay {\r\n\t\ttop:0;\r\n\t\tleft:0;\r\n\t\tright:0;\r\n\t\tbottom:0;\r\n\t\tposition: absolute;\r\n\t\tbackground: #111;\r\n\t\topacity: 0.6;\r\n\t}\r\n\t\r\n\r\n\t@media only screen and (max-width: 1000px) {\r\n\t\t.modal {\r\n\t\t\ttop:0;\r\n\t\t\tleft:0;\r\n\t\t\tright:0;\r\n\t\t\tbottom:0;\r\n\r\n\t\t}\r\n\t\t.modal-overlay {\r\n\t\t\tposition: unset;\r\n\t\t\tdisplay:none;\r\n\t\t}\r\n\r\n\t\t.cell {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t}\r\n</style>\r\n","/* eslint-disable no-undef */\r\nimport App from './App.svelte';\r\nconst app = new App({\r\n    target: document.body,\r\n    props: {}\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","current_component","set_current_component","get_current_component","Error","createEventDispatcher","type","detail","e","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","index","indexOf","splice","$$props","obj","$$set","keys","slot_ctx","title","cellid","dispatch","remove","id","key","important","style","setProperty","iconel","icon","click","val","files","reader","FileReader","onload","result","readAsDataURL","console","log","getRandomValues","crypto","bind","msCrypto","rnds8","Uint8Array","rng","validate","uuid","REGEX","test","byteToHex","toString","substr","v4","buf","offset","rnds","random","arr","arguments","toLowerCase","TypeError","stringify","parse","build","globalThis","plist","Config","config_name","config_author","webclips","genString","webclip","icondata","fetch","iconurl","arrayBuffer","mobileconfig","PayloadDisplayName","PayloadOrganization","payload","PayloadContent","Icon","imageblob","Blob","url","URL","createObjectURL","Label","app_uuid","toUpperCase","payload_uuid","FullScreen","IsRemovable","PayloadDescription","PayloadIdentifier","PayloadType","PayloadUUID","PayloadVersion","Precomposed","PayloadRemovalDisallowed","res","characters","charactersLength","charAt","floor","gen","compile","localStorage","setItem","subscriber_queue","Configs","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","writable","configs","startsWith","mconfigs","getItem","split","config","load","loadConfigs","$Configs","find","payloads","loadIcon","removePayload","currentConfig","save_button","showModal","getConfig","found","ClickForConfig","el","parentElement","attributes","save","innerHTML","setTimeout","compiled","blob","window","open","confirm","findIndex","removeItem","removeConfigLS","body"],"mappings":"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"}